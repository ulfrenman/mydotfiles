When I upgraded to Ubuntu 18.04 awesome was upgraded to v4.2 (where I think I
was previously on v3.5). This introduced some issues for me. And while I was
fixing them I gatherd some knowledge that I will try to compile here.

Nice links:
 * https://awesomewm.org/apidoc/documentation/05-awesomerc.md.html
 * https://awesomewm.org/apidoc/documentation/17-porting-tips.md.html
 * http://www.holgerschurig.de/tags/awesome/

Help:
 * https://github.com/streetturtle/awesome-wm-widgets/tree/master/cpu-widget
   This is a simple cpu-widget with wery understandable code! In the
   parent-directory there is plenty of other useful widgets, information and
   code-examples.
 * https://awesomewm.org/doc/api/classes/client.html
 * https://www.reddit.com/r/awesomewm/comments/6cwevs/the_purpose_of_run_lua_code/dhyi71h/


awesome-client:
 * Use return instead of print:
    return "HelloWorld"

volume-control:
 * This module needs to be downloaded as:
    cd ~/.config/awesome
    git clone https://github.com/deficient/volume-control.git

Todo:
 * If there is more than 1 screen, make first tag on screen 1 IM tag with
   floating layout
 * Make gimp (and all its popups) always be floating by default
 * Show window state somewere (in popup window or tasklist??),
   beautiful.tasklist_plain_task_name seems to be related to this but I cant
   get it working.
 * Try testing and development using Xephyr:
     https://awesomewm.org/doc/api/documentation/17-porting-tips.md.html
 * Learn how to use awesome-client
 * Learn some Lua
 * Look at https://awesomewm.org/doc/api/classes/wibox.widget.calendar.html
   and try to make it popup when klicking the clock at the top. Possible with
   prev- next-buttons.
 * How can I on the commandline fire up a notification-box or put something in
   the systray (with optional color).
 * Make screen order depend on the physical order of the screens. This seems
   to be "random" at the moment so moving client to the next screen
   (move_to_screen()) is not always the same as moving it to the next monitor
   to the right. This is confusing. Try to use "swap()" during initialization
   (rc.lua) to set this up!
